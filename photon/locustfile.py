from locust import task, FastHttpUser

EXAMPLE_IMAGE_BASE64 = ""


class WebsiteUser(FastHttpUser):
    def on_start(self):
        self._payload = {
            "prompt": (
                "Portrait of The Terminator, glare pose, detailed, intricate, full of"
                " colour, cinematic lighting, trending on artstation, 8k,"
                " hyperrealistic, focused, extreme details, unreal engine 5, cinematic,"
                " masterpiece"
            ),
            "seed": 2159232,
            "strength": 0.5,
            "steps": 4,
            "guidance_scale": 8.0,
            "width": 512,
            "height": 512,
            "lcm_steps": 50,
            "input_image": EXAMPLE_IMAGE_BASE64,
        }

        self._post_payload()

    @task
    def post_payload(self):
        self._post_payload()

    def _post_payload(self):
        self.client.post("/run", json=self._payload)
